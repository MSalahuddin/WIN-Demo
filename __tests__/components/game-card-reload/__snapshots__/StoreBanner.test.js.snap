// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component StoreBanner renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      },
    ]
  }
  width={100}
>
  <Image
    bannerType="BACKDROP"
    resizeMode="contain"
    source={1}
    style={
      Array [
        Object {
          "height": 28.695652173913043,
          "width": 100,
        },
      ]
    }
    width={100}
  />
  <Text
    alignCenter={false}
    allowFontScaling={false}
    bannerType="BACKDROP"
    color="#000000"
    fontFamily="BOLD"
    isUnderlined={false}
    isUppercase={true}
    maxFontSizeMultiplier={1.3}
    size="LARGE"
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "CalibreBold",
          "fontSize": 31.5,
          "justifyContent": "center",
          "textAlign": "left",
          "textDecorationColor": "#000000",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "textTransform": "uppercase",
        },
        Object {
          "color": "#FFFFFF",
          "letterSpacing": 1.5,
          "paddingBottom": 10,
          "position": "absolute",
        },
      ]
    }
  >
    Foo
  </Text>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": 16,
          "borderBottomRightRadius": 16,
          "bottom": -44,
          "elevation": 8,
          "flexDirection": "row",
          "height": 98,
          "justifyContent": "space-between",
          "opacity": 0.85,
          "paddingTop": 30,
          "position": "absolute",
          "shadowColor": "rgba(53, 53, 53, 0.3)",
          "shadowOffset": Object {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 1,
          "shadowRadius": 2,
          "width": "75%",
          "zIndex": -1,
        },
      ]
    }
    width={100}
  >
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="LEFT"
        color="#000000"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "transparent",
              "borderRadius": 3,
              "borderRightColor": "#000000",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
    <Text
      alignCenter={false}
      allowFontScaling={true}
      color="#000000"
      fontFamily="SEMI BOLD"
      isUnderlined={false}
      isUppercase={false}
      maxFontSizeMultiplier={1.3}
      size="XSMALL"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Calibre-Semibold",
            "fontSize": 24,
            "justifyContent": "center",
            "textAlign": "left",
            "textDecorationColor": "#000000",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
            "textTransform": "none",
          },
          Object {
            "marginTop": 12,
          },
        ]
      }
    >
      
    </Text>
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="RIGHT"
        color="#000000"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "#000000",
              "borderRadius": 3,
              "borderRightColor": "transparent",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Component StoreBanner renders correctly with leftEnabled set to false 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      },
    ]
  }
  width={100}
>
  <Image
    bannerType="BACKDROP"
    resizeMode="contain"
    source={1}
    style={
      Array [
        Object {
          "height": 28.695652173913043,
          "width": 100,
        },
      ]
    }
    width={100}
  />
  <Text
    alignCenter={false}
    allowFontScaling={false}
    bannerType="BACKDROP"
    color="#000000"
    fontFamily="BOLD"
    isUnderlined={false}
    isUppercase={true}
    maxFontSizeMultiplier={1.3}
    size="LARGE"
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "CalibreBold",
          "fontSize": 31.5,
          "justifyContent": "center",
          "textAlign": "left",
          "textDecorationColor": "#000000",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "textTransform": "uppercase",
        },
        Object {
          "color": "#FFFFFF",
          "letterSpacing": 1.5,
          "paddingBottom": 10,
          "position": "absolute",
        },
      ]
    }
  >
    Foo
  </Text>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": 16,
          "borderBottomRightRadius": 16,
          "bottom": -44,
          "elevation": 8,
          "flexDirection": "row",
          "height": 98,
          "justifyContent": "space-between",
          "opacity": 0.85,
          "paddingTop": 30,
          "position": "absolute",
          "shadowColor": "rgba(53, 53, 53, 0.3)",
          "shadowOffset": Object {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 1,
          "shadowRadius": 2,
          "width": "75%",
          "zIndex": -1,
        },
      ]
    }
    width={100}
  >
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="LEFT"
        color="#B7B7B7"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "transparent",
              "borderRadius": 3,
              "borderRightColor": "#B7B7B7",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
    <Text
      alignCenter={false}
      allowFontScaling={true}
      color="#000000"
      fontFamily="SEMI BOLD"
      isUnderlined={false}
      isUppercase={false}
      maxFontSizeMultiplier={1.3}
      size="XSMALL"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Calibre-Semibold",
            "fontSize": 24,
            "justifyContent": "center",
            "textAlign": "left",
            "textDecorationColor": "#000000",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
            "textTransform": "none",
          },
          Object {
            "marginTop": 12,
          },
        ]
      }
    >
      
    </Text>
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="RIGHT"
        color="#000000"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "#000000",
              "borderRadius": 3,
              "borderRightColor": "transparent",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Component StoreBanner renders correctly with rightEnabled set to false 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "justifyContent": "center",
      },
    ]
  }
  width={100}
>
  <Image
    bannerType="BACKDROP"
    resizeMode="contain"
    source={1}
    style={
      Array [
        Object {
          "height": 28.695652173913043,
          "width": 100,
        },
      ]
    }
    width={100}
  />
  <Text
    alignCenter={false}
    allowFontScaling={false}
    bannerType="BACKDROP"
    color="#000000"
    fontFamily="BOLD"
    isUnderlined={false}
    isUppercase={true}
    maxFontSizeMultiplier={1.3}
    size="LARGE"
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "CalibreBold",
          "fontSize": 31.5,
          "justifyContent": "center",
          "textAlign": "left",
          "textDecorationColor": "#000000",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
          "textTransform": "uppercase",
        },
        Object {
          "color": "#FFFFFF",
          "letterSpacing": 1.5,
          "paddingBottom": 10,
          "position": "absolute",
        },
      ]
    }
  >
    Foo
  </Text>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderBottomLeftRadius": 16,
          "borderBottomRightRadius": 16,
          "bottom": -44,
          "elevation": 8,
          "flexDirection": "row",
          "height": 98,
          "justifyContent": "space-between",
          "opacity": 0.85,
          "paddingTop": 30,
          "position": "absolute",
          "shadowColor": "rgba(53, 53, 53, 0.3)",
          "shadowOffset": Object {
            "height": 4,
            "width": 4,
          },
          "shadowOpacity": 1,
          "shadowRadius": 2,
          "width": "75%",
          "zIndex": -1,
        },
      ]
    }
    width={100}
  >
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="LEFT"
        color="#000000"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "transparent",
              "borderRadius": 3,
              "borderRightColor": "#000000",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
    <Text
      alignCenter={false}
      allowFontScaling={true}
      color="#000000"
      fontFamily="SEMI BOLD"
      isUnderlined={false}
      isUppercase={false}
      maxFontSizeMultiplier={1.3}
      size="XSMALL"
      style={
        Array [
          Object {
            "color": "#000000",
            "fontFamily": "Calibre-Semibold",
            "fontSize": 24,
            "justifyContent": "center",
            "textAlign": "left",
            "textDecorationColor": "#000000",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
            "textTransform": "none",
          },
          Object {
            "marginTop": 12,
          },
        ]
      }
    >
      
    </Text>
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 20,
          "left": 20,
          "right": 20,
          "top": 20,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="arrow"
    >
      <View
        arrowDirection="RIGHT"
        color="#B7B7B7"
        size={8}
        style={
          Array [
            Object {
              "borderBottomColor": "transparent",
              "borderLeftColor": "#B7B7B7",
              "borderRadius": 3,
              "borderRightColor": "transparent",
              "borderStyle": "solid",
              "borderTopColor": "transparent",
              "borderWidth": 12,
              "height": 0,
              "width": 0,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;
